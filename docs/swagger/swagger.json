{
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Qredo Signing Agent service interacts with [Partner API](https://developers.qredo.com/partner-api/api/swagger/) to register a Signing Agent to automate approvals according to your custody policy. \u003cbr/\u003e\nAuthentication and encryption are required; set up your [API key and secret in the Qredo Web App](https://developers.qredo.com/signing-agent/v2-signing-agent/get-started/). \u003cbr/\u003e",
    "title": "Qredo Signing Agent V2",
    "contact": {
      "name": "Qredo API Services",
      "url": "https://www.qredo.com",
      "email": "support@qredo.com"
    },
    "license": {
      "name": "APACHE 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "0.1.0"
  },
  "host": "localhost:8007",
  "basePath": "/api/v1",
  "paths": {
    "/client": {
      "get": {
        "tags": [
          "client"
        ],
        "summary": "Returns AgentID if it's configured",
        "operationId": "GetAgentID",
        "responses": {
          "200": {
            "description": "GetAgentIDResponse",
            "schema": {
              "$ref": "#/definitions/GetAgentIDResponse"
            }
          }
        }
      }
    },
    "/client/action/{action_id}": {
      "put": {
        "tags": [
          "action"
        ],
        "summary": "Approve a transaction",
        "operationId": "actionApprove",
        "parameters": [
          {
            "type": "string",
            "description": "the id of the transaction that is received from the feed",
            "name": "action_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResponse",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "action"
        ],
        "summary": "Reject a transaction",
        "operationId": "actionReject",
        "parameters": [
          {
            "type": "string",
            "description": "the id of the transaction that is received from the feed",
            "name": "action_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResponse",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          }
        }
      }
    },
    "/client/feed": {
      "get": {
        "produces": [
          "application/json"
        ],
        "schemes": [
          "ws",
          "wss"
        ],
        "tags": [
          "client"
        ],
        "summary": "Get approval requests Feed (via websocket) from Qredo Backend",
        "operationId": "ClientFeed",
        "responses": {
          "200": {
            "description": "ClientFeedResponse",
            "schema": {
              "$ref": "#/definitions/ClientFeedResponse"
            }
          }
        }
      }
    },
    "/client/register": {
      "post": {
        "tags": [
          "client"
        ],
        "summary": "Register a new agent",
        "operationId": "RegisterAgent",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ClientRegisterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ClientFullRegisterResponse",
            "schema": {
              "$ref": "#/definitions/ClientFullRegisterResponse"
            }
          }
        }
      }
    },
    "/healthcheck/config": {
      "get": {
        "tags": [
          "healthcheck"
        ],
        "summary": "Check application configuration.",
        "operationId": "HealthcheckConfig",
        "responses": {
          "200": {
            "description": "ConfigResponse",
            "schema": {
              "$ref": "#/definitions/ConfigResponse"
            }
          }
        }
      }
    },
    "/healthcheck/status": {
      "get": {
        "tags": [
          "healthcheck"
        ],
        "summary": "Check application status.",
        "operationId": "HealthcheckStatus",
        "responses": {
          "200": {
            "description": "HealthCheckStatusResponse",
            "schema": {
              "$ref": "#/definitions/HealthCheckStatusResponse"
            }
          }
        }
      }
    },
    "/healthcheck/version": {
      "get": {
        "tags": [
          "healthcheck"
        ],
        "summary": "Check application version.",
        "operationId": "HealthcheckVersion",
        "responses": {
          "200": {
            "description": "VersionResponse",
            "schema": {
              "$ref": "#/definitions/VersionResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AWSConfig": {
      "type": "object",
      "title": "AWSConfig based signing-agent config. Used when Base StoreType is aws.",
      "properties": {
        "configSecret": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      }
    },
    "AutoApprove": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "retryIntervalMaxSec": {
          "type": "integer",
          "format": "int64"
        },
        "retryIntervalSec": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Base": {
      "type": "object",
      "properties": {
        "pin": {
          "type": "integer",
          "format": "int64"
        },
        "qredoAPI": {
          "type": "string"
        }
      }
    },
    "ClientFeedResponse": {
      "type": "object",
      "properties": {
        "coreClientID": {
          "description": "The ID of the agent",
          "type": "string",
          "example": "98cTMMSPrDdcDDVU8idhuJGK2U1P4vmQcsp8wnED8pPR"
        },
        "expireTime": {
          "description": "The time that the transaction will expire, utc unix time",
          "type": "integer",
          "format": "int64",
          "example": 1676184187
        },
        "id": {
          "description": "The ID of the transaction",
          "type": "string",
          "example": "2IXwq4klvWbnPf1YaAc1XD85jJX"
        },
        "status": {
          "description": "The status of the transaction",
          "type": "string",
          "example": "pending"
        },
        "timestamp": {
          "description": "The time that the transaction was started, utc unix time",
          "type": "integer",
          "format": "int64",
          "example": 1670341423
        },
        "type": {
          "description": "The type of the transaction",
          "type": "string",
          "example": "ApproveWithdraw"
        }
      }
    },
    "ClientFullRegisterResponse": {
      "type": "object",
      "properties": {
        "agentID": {
          "type": "string"
        },
        "feedURL": {
          "type": "string"
        }
      }
    },
    "ClientRegisterRequest": {
      "type": "object",
      "properties": {
        "APIKey": {
          "description": "The api key for the partner api",
          "type": "string",
          "example": "eyJrZXkiOiJHM0Fo... (truncated)"
        },
        "base64PrivateKey": {
          "description": "The base64 encoded private key pem of which the public key has been registered in the partner api",
          "type": "string",
          "example": "LS0tLS1CRUdJTiBS... (truncated)"
        },
        "name": {
          "description": "The name of the agent",
          "type": "string",
          "example": "test-agent"
        }
      }
    },
    "ConfigResponse": {
      "type": "object",
      "properties": {
        "autoApproval": {
          "$ref": "#/definitions/AutoApprove"
        },
        "base": {
          "$ref": "#/definitions/Base"
        },
        "http": {
          "$ref": "#/definitions/HttpSettings"
        },
        "loadBalancing": {
          "$ref": "#/definitions/LoadBalancing"
        },
        "logging": {
          "$ref": "#/definitions/Logging"
        },
        "store": {
          "$ref": "#/definitions/Store"
        },
        "websocket": {
          "$ref": "#/definitions/WebSocketConf"
        }
      }
    },
    "GenericResponse": {
      "type": "object",
      "properties": {
        "Code": {
          "description": "The result code of the request",
          "type": "integer",
          "format": "int64",
          "example": 200
        },
        "Msg": {
          "description": "The result message of the request",
          "type": "string",
          "example": "OK"
        }
      }
    },
    "GetAgentIDResponse": {
      "type": "object",
      "properties": {
        "Body": {
          "$ref": "#/definitions/GetAgentIDResponse"
        }
      }
    },
    "HealthCheckStatusResponse": {
      "type": "object",
      "properties": {
        "websocket": {
          "$ref": "#/definitions/WebsocketStatus"
        }
      }
    },
    "HttpSettings": {
      "type": "object",
      "properties": {
        "CORSAllowOrigins": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "TLS": {
          "$ref": "#/definitions/TLSConfig"
        },
        "addr": {
          "type": "string"
        },
        "logAllRequests": {
          "type": "boolean"
        }
      }
    },
    "LoadBalancing": {
      "type": "object",
      "properties": {
        "actionIDExpirationSec": {
          "type": "integer",
          "format": "int64"
        },
        "enable": {
          "type": "boolean"
        },
        "onLockErrorTimeoutMs": {
          "type": "integer",
          "format": "int64"
        },
        "redis": {
          "$ref": "#/definitions/RedisConfig"
        }
      }
    },
    "Logging": {
      "type": "object",
      "properties": {
        "format": {
          "type": "string"
        },
        "level": {
          "type": "string"
        }
      }
    },
    "OciConfig": {
      "type": "object",
      "properties": {
        "compartment": {
          "type": "string"
        },
        "configSecret": {
          "type": "string"
        },
        "secretEncryptionKey": {
          "type": "string"
        },
        "vault": {
          "type": "string"
        }
      }
    },
    "RedisConfig": {
      "type": "object",
      "properties": {
        "db": {
          "type": "integer",
          "format": "int64"
        },
        "host": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Store": {
      "type": "object",
      "properties": {
        "aws": {
          "$ref": "#/definitions/AWSConfig"
        },
        "file": {
          "type": "string"
        },
        "oci": {
          "$ref": "#/definitions/OciConfig"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "TLSConfig": {
      "type": "object",
      "properties": {
        "certFile": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "keyFile": {
          "type": "string"
        }
      }
    },
    "VersionResponse": {
      "type": "object",
      "properties": {
        "buildDate": {
          "type": "string"
        },
        "buildType": {
          "type": "string"
        },
        "buildVersion": {
          "type": "string"
        }
      }
    },
    "WebSocketConf": {
      "type": "object",
      "properties": {
        "pingPeriodSec": {
          "type": "integer",
          "format": "int64"
        },
        "pongWaitSec": {
          "type": "integer",
          "format": "int64"
        },
        "qredoWebsocket": {
          "type": "string"
        },
        "readBufferSize": {
          "type": "integer",
          "format": "int64"
        },
        "reconnectIntervalSec": {
          "type": "integer",
          "format": "int64"
        },
        "reconnectTimeoutSec": {
          "type": "integer",
          "format": "int64"
        },
        "writeBufferSize": {
          "type": "integer",
          "format": "int64"
        },
        "writeWaitSec": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "WebsocketStatus": {
      "type": "object",
      "properties": {
        "connectedClients": {
          "type": "integer",
          "format": "uint32"
        },
        "localFeedURL": {
          "type": "string"
        },
        "readyState": {
          "type": "string"
        },
        "remoteFeedURL": {
          "type": "string"
        }
      }
    }
  }
}